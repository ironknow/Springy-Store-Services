<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.0.M4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.siriusxi.ms.store</groupId>
    <artifactId>store-chassis</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>Springy Store Chassis</name>
    <description>Parent pom project for Springy Î¼Services</description>
    <packaging>pom</packaging>

    <modules>
        <module>../product-composite-service</module>
        <module>../product-service</module>
        <module>../review-service</module>
        <module>../recommendation-service</module>
        <module>../store-api</module>
        <module>../store-utils</module>
    </modules>

    <properties>
        <java.version>14</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.config.file.location>../config/maven/store.properties
        </project.config.file.location>

        <!--  Dependencies versions properties  -->
        <maven.plugin.dockerfile.version>1.4.13</maven.plugin.dockerfile.version>
        <maven.plugin.properties.version>1.0.0</maven.plugin.properties.version>

    </properties>

    <dependencies>
        <!-- Start - Development dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- End - Development dependencies -->

        <!-- Start - Core dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <!-- End - Core dependencies -->

        <!-- Start - Testing dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- End - Testing dependencies -->

        <!-- Start - Store application business dependencies -->
        <dependency>
            <groupId>com.siriusxi.ms.store</groupId>
            <artifactId>store-api</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.siriusxi.ms.store</groupId>
            <artifactId>store-utils</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <!-- End - Store application business dependencies -->

        <!-- Start - Other dependencies -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- End - Other dependencies -->
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Start - Of product dockerization -->
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>${maven.plugin.dockerfile.version}</version>
                    <configuration>
                        <dockerfile>Dockerfile</dockerfile>
                        <repository>${docker.repo.image.prefix}/${project.artifactId}</repository>
                        <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                        <buildArgs>
                            <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                            <IMAGE_VERSION>${project.version}</IMAGE_VERSION>
                            <IMAGE_NAME>${project.name}</IMAGE_NAME>
                            <MAINTAINER>${maintainer.name} (${maintainer.email})</MAINTAINER>
                        </buildArgs>
                    </configuration>
                </plugin>
                <!-- End - Of product dockerization -->
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- Start - reading external properties -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>${maven.plugin.properties.version}</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <!--To continue working if file is messing when set to true -->
                            <quiet>false</quiet>
                            <files>
                                <file>${project.config.file.location}</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- End - reading external properties -->

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!-- Make final jar, a layered jar -->
                    <layers>
                        <enabled>true</enabled>
                    </layers>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <release>${java.version}</release>
                    <compilerArgs>
                        --enable-preview
                    </compilerArgs>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>--enable-preview</argLine>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <argLine>--enable-preview</argLine>
                </configuration>
            </plugin>

        </plugins>
    </build>
    <!-- Project profiles definition -->
    <profiles>
        <profile>
            <id>docker-build</id>
            <activation>
                <file>
                    <exists>${basedir}/Dockerfile</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>build-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <configuration>
                                    <tag>${docker.image.default.tag}</tag>
                                </configuration>
                            </execution>
                            <execution>
                                <id>tag-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>tag</goal>
                                </goals>
                                <configuration>
                                    <tag>${project.version}</tag>
                                </configuration>
                            </execution>
                            <execution>
                                <id>push-image</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
        </pluginRepository>
    </pluginRepositories>
</project>
