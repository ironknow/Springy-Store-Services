version: '3.7' ## Latest version works with Docker Engine release 18.06.0+

services:
  product:
    build: product-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongodb
      - rabbitmq

  recommendation:
    build: recommendation-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongodb
      - rabbitmq

  review:
    build: review-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysql
      - rabbitmq
    restart: on-failure

  store:
    build: store-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - rabbitmq

  # $ mongo
  mongodb:
    image: mongo:4.2.5-bionic
    ports:
      - "27017-27019:27017-27019"
    healthcheck:
      test: "mongo --eval 'db.stats().ok'"
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: on-failure

  # $ mysql -uroot -h127.0.0.1 -p
  mysql:
    image: mysql:8.0.19
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpwd
      - MYSQL_DATABASE=review-db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pwd
      - MYSQL_ROOT_HOST=%
    healthcheck:
      test: "/usr/bin/mysql --user=user --password=pwd --execute \"SHOW DATABASES;\""
      interval: 10s
      timeout: 5s
      retries: 10
    restart: on-failure

  # RabbitMQ Messaging service
  rabbitmq:
    image: rabbitmq:3.8.3-management
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: on-failure
